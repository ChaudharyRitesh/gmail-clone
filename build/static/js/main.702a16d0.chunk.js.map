{"version":3,"sources":["features/userSlice.js","assets/logo.png","firebase.js","Components/Header.js","Components/SidebarOption.js","features/mailSlice.js","Components/Sidebar.js","Components/MailBox.js","Components/Section.js","Components/EmailRow.js","Components/EmailList.js","Components/SendMail.js","Components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","logo","alt","type","placeholder","Avatar","onClick","console","log","signOut","then","photoURL","Divider","SidebarOption","Icon","number","title","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectsendMessageIsOpen","Sidebar","Button","startIcon","InboxIcon","StarIcon","WatchLaterIcon","DraftsIcon","LabelImportantIcon","SendIcon","ExpandMoreIcon","MailBox","history","useHistory","push","Paper","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","email","setEmail","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timeStamp","Date","seconds","toUTCString","SendMail","useForm","register","errors","formState","handleSubmit","onSubmit","formData","add","FieldValue","serverTimeStamp","required","variant","Login","signInWithPopup","displayName","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.702a16d0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n\r\n  reducers: {\r\n    login: (state, action) => {\r\n      // eslint-disable-next-line no-undef\r\n      state.user = action.payload;\r\n    },\r\n    logout: state => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","export default __webpack_public_path__ + \"static/media/logo.037ad0a6.png\";","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDlprZ1eW0RXtBqKqPhAv3oDNCLrHoJHUg\",\r\n  authDomain: \"clone-8fe7c.firebaseapp.com\",\r\n  projectId: \"clone-8fe7c\",\r\n  storageBucket: \"clone-8fe7c.appspot.com\",\r\n  messagingSenderId: \"832475147287\",\r\n  appId: \"1:832475147287:web:ec1a62e8121cb9f9928052\",\r\n  measurementId: \"G-R2GYVZE0GZ\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, logout } from \"../features/userSlice\";\r\nimport logo from \"../assets/logo.png\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { auth } from \"../firebase\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const signOut = () => {\r\n    console.log(\"logout\");\r\n    auth.signOut().then(() => {\r\n      dispatch(logout());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"header__left\">\r\n          <IconButton className=\"icon\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={logo} alt=\"gmail logo\" />\r\n        </div>\r\n        <div className=\"header__search\">\r\n          <SearchIcon />\r\n          <input type=\"text\" placeholder=\"search mail\" />\r\n          <ArrowDropDownIcon className=\"dropdown\" />\r\n        </div>\r\n        <div className=\"header__right\">\r\n          <IconButton>\r\n            <HelpOutlineIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AppsIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Avatar onClick={signOut} src={user?.photoURL} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/SidebarOption.css\";\r\n\r\nfunction SidebarOption({ Icon, number, title, selected }) {\r\n  return (\r\n    <div className={`SidebarOption ${selected && \"SidebarOption--active\"} `}>\r\n      <Icon />\r\n      <h3> {title} </h3>\r\n      <p> {number} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const mailSlice = createSlice({\r\n  name: \"mail\",\r\n  initialState: {\r\n    selectedMail: null,\r\n    sendMessageIsOpen: false,\r\n  },\r\n\r\n  reducers: {\r\n    selectMail: (state, action) => {\r\n      // eslint-disable-next-line no-undef\r\n      state.selectedMail = action.payload;\r\n    },\r\n    openSendMessage: state => {\r\n      state.sendMessageIsOpen = true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  selectMail,\r\n  openSendMessage,\r\n  closeSendMessage,\r\n} = mailSlice.actions;\r\n\r\nexport const selectOpenMail = state => state.mail.selectedMail;\r\nexport const selectsendMessageIsOpen = state => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport DuoIcon from \"@material-ui/icons/Duo\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport \"../styles/Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport { openSendMessage } from \"../features/mailSlice\";\r\n\r\nfunction Sidebar() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      <Button\r\n        startIcon={<AddIcon className=\"icon\" />}\r\n        className=\"Sidebar-compose\"\r\n        onClick={() => dispatch(openSendMessage())}\r\n      >\r\n        Compose\r\n      </Button>\r\n      <SidebarOption\r\n        Icon={InboxIcon}\r\n        title=\"Inbox\"\r\n        number={54}\r\n        selected={true}\r\n      />\r\n      <SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\r\n      <SidebarOption Icon={WatchLaterIcon} title=\"Snoozed\" number={14} />\r\n      <SidebarOption Icon={DraftsIcon} title=\"Draft\" number={19} />\r\n      <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={19} />\r\n      <SidebarOption Icon={SendIcon} title=\"Sent\" number={19} />\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"More\" />\r\n\r\n      <div className=\"Sidebar__footer\">\r\n        <div className=\"footer__icon\">\r\n          <IconButton>\r\n            <PersonIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <DuoIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <PhoneIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IconButton, Paper, Divider } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { selectOpenMail } from \"../features/mailSlice\";\r\nimport \"../styles/Mail.css\";\r\n\r\nfunction MailBox() {\r\n  const history = useHistory();\r\n\r\n  const selectedMail = useSelector(selectOpenMail);\r\n\r\n  return (\r\n    <div className=\"mail\">\r\n      <div className=\"mail__tools\">\r\n        <div className=\"mail__tools--left\">\r\n          <IconButton onClick={() => history.push(\"/\")}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoveToInboxIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ErrorIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <EmailIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <WatchLaterIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <CheckCircleIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <LabelImportantIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"mail__tools--right\">\r\n          <IconButton>\r\n            <UnfoldMoreIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <PrintIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <Paper className=\"mail__paper\">\r\n        <div className=\"mail__body\">\r\n          <div className=\"mail__body--header\">\r\n            <h2>{selectedMail?.subject}</h2>\r\n            <IconButton>\r\n              <LabelImportantIcon className=\"mail__important\" />\r\n            </IconButton>\r\n            <p>{selectedMail?.title}</p>\r\n            <p className=\"mail__time\">{selectedMail?.time}</p>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"mail__message\">\r\n            <p>{selectedMail?.description}</p>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MailBox;\r\n","import React from \"react\";\r\nimport \"../styles/Section.css\";\r\n\r\nfunction Section({ Icon, title, color, selected }) {\r\n  return (\r\n    <div\r\n      className={`section ${selected && \"section--selected\"}`}\r\n      style={{\r\n        borderBottom: `3px solid ${color}`,\r\n        color: `${selected && color}`,\r\n      }}\r\n    >\r\n      <Icon />\r\n      <h4>{title}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport LabelImportantOutlinedIcon from \"@material-ui/icons/LabelImportantOutlined\";\r\nimport { selectMail } from \"../features/mailSlice\";\r\nimport \"../styles/EmailRow.css\";\r\n\r\nfunction EmailRow({ title, id, subject, description, time }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const openMail = () => {\r\n    dispatch(selectMail(title, id, subject, description, time));\r\n    history.push(\"/mail\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"emailRow\">\r\n      <div className=\"emailRow__options\">\r\n        <Checkbox />\r\n        <IconButton>\r\n          <StarBorderOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <LabelImportantOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"emailRow__link\" onClick={openMail}>\r\n        <div className=\"emailRow__title\">\r\n          <h3>{title} </h3>\r\n        </div>\r\n        <div className=\"emailRow__message\">\r\n          <h4>\r\n            {subject} -\r\n            <span className=\"emailRow__description\"> {description}</span>\r\n          </h4>\r\n        </div>\r\n        <p className=\"emailRow__time\">{time}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport Section from \"./Section\";\r\nimport EmailRow from \"./EmailRow\";\r\nimport { db } from \"../firebase\";\r\nimport \"../styles/EmalList.css\";\r\n\r\nfunction EmailList() {\r\n  const [email, setEmail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"emails\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot(snapshot =>\r\n        setEmail(\r\n          snapshot.docs.map(doc => [\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),\r\n            },\r\n          ])\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"EmailList\">\r\n      <div className=\"EmailList__settings\">\r\n        <div className=\"EmailList__settings--left\">\r\n          <Checkbox />\r\n          <IconButton>\r\n            <ArrowDropDownIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <RefreshIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className=\"EmailList__setting--right\">\r\n          <IconButton>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <KeyboardHideIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"EmailList__section\">\r\n        <Section Icon={InboxIcon} title=\"Primay\" color=\"#D93025\" selected />\r\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\r\n        <Section Icon={LocalOfferIcon} title=\"Promotion\" color=\"#188038\" />\r\n      </div>\r\n      <div className=\"EmailList__List\">\r\n        {email.map(({ id, data: { to, subject, message, timeStamp } }) => (\r\n          <EmailRow\r\n            id={id}\r\n            key={id}\r\n            title={to}\r\n            subject={subject}\r\n            description={message}\r\n            time={new Date(timeStamp?.seconds * 1000).toUTCString()}\r\n          />\r\n        ))}\r\n        <EmailRow\r\n          title=\"Twitch\"\r\n          description=\"Hello this a message from the twitch as a demo\"\r\n          subject=\"Hey Ritesh, from twitch\"\r\n          time=\"10 AM\"\r\n        />\r\n        <EmailRow\r\n          title=\"Twitch\"\r\n          description=\"Hello this a message from the twitch as a demo\"\r\n          subject=\"Hey Ritesh, from twitch\"\r\n          time=\"10 AM\"\r\n        />\r\n        <EmailRow\r\n          title=\"Twitch\"\r\n          description=\"Hello this a message from the twitch as a demo\"\r\n          subject=\"Hey Ritesh, from twitch\"\r\n          time=\"10 AM\"\r\n        />\r\n        <EmailRow\r\n          title=\"Twitch\"\r\n          description=\"Hello this a message from the twitch as a demo\"\r\n          subject=\"Hey Ritesh, from twitch\"\r\n          time=\"10 AM\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailList;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { closeSendMessage } from \"../features/mailSlice\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"../styles/SendMail.css\";\r\n\r\nfunction SendMail() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  const onSubmit = formData => {\r\n    console.log(formData);\r\n    db.collection(\"emails\").add({\r\n      to: formData.to,\r\n      subject: formData.subject,\r\n      message: formData.message,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimeStamp(),\r\n    });\r\n\r\n    dispatch(closeSendMessage());\r\n  };\r\n\r\n  return (\r\n    <div className=\"sendmail\">\r\n      <div className=\"sendmail__header\">\r\n        <h3>New Message</h3>\r\n        <CloseIcon\r\n          className=\"sendmail__close\"\r\n          onClick={() => dispatch(closeSendMessage())}\r\n        />\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          name=\"to\"\r\n          type=\"email\"\r\n          placeholder=\"To :\"\r\n          {...register(\"to\", { required: true })}\r\n        />\r\n        {errors.to && <p className=\"sendmail__error\">Recipient is required</p>}\r\n        <input\r\n          name=\"subject\"\r\n          type=\"text\"\r\n          placeholder=\"Subject :\"\r\n          {...register(\"subject\", { required: true })}\r\n        />\r\n        {errors.subject && (\r\n          <p className=\"sendmail__error\">Subject is required</p>\r\n        )}\r\n        <input\r\n          name=\"message\"\r\n          type=\"text\"\r\n          className=\"sendmail__messageInput\"\r\n          {...register(\"message\", { required: true })}\r\n        />\r\n        {errors.message && (\r\n          <p className=\"sendmail__error\">Message field cannot be empty</p>\r\n        )}\r\n\r\n        <div className=\"sendmail__options\">\r\n          <Button\r\n            // onClick={onSubmit}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className=\"sendmail__button\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendMail;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { login } from \"../features/userSlice\";\r\nimport \"../styles/Login.css\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const signIn = () => {\r\n    console.log(\"loginnn\");\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then(({ user }) => {\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoURL: user.photoURL,\r\n          })\r\n        );\r\n      })\r\n      .catch(error => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={signIn}>\r\n          Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Header from \"./Components/Header\";\r\nimport Sidebar from \"./Components/Sidebar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MailBox from \"./Components/MailBox\";\r\nimport EmailList from \"./Components/EmailList\";\r\nimport SendMail from \"./Components/SendMail\";\r\nimport Login from \"./Components/Login\";\r\nimport { selectsendMessageIsOpen } from \"./features/mailSlice\";\r\nimport { selectUser, login } from \"./features/userSlice\";\r\nimport { auth } from \"./firebase\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const sendMessageIsOpen = useSelector(selectsendMessageIsOpen);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // the user is logged in\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoURL: user.photoURL,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"App\">\r\n          <Header />\r\n\r\n          <div className=\"App__body\">\r\n            <Sidebar />\r\n\r\n            <Switch>\r\n              <Route path=\"/mail\">\r\n                <MailBox />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <EmailList />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n          {sendMessageIsOpen && <SendMail />}\r\n        </div>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport mailReducer from \"../features/mailSlice\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}